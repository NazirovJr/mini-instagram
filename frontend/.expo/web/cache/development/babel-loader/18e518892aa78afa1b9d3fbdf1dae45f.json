{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\React and JS\\\\instagram\\\\njr-instagram\\\\frontend\\\\components\\\\main\\\\Feed.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport EvilIcons from \"@expo/vector-icons/EvilIcons\";\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded === props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    console.log(posts);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: styles.containerLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, item.currentUserLike ? React.createElement(MaterialCommunityIcons, {\n        name: \"heart\",\n        color: \"red\",\n        size: 26,\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }) : React.createElement(MaterialCommunityIcons, {\n        name: \"heart-outline\",\n        size: 26,\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }), React.createElement(EvilIcons, {\n        name: \"comment\",\n        size: 36,\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      })), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"View Comments...\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  },\n  containerLike: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","MaterialCommunityIcons","EvilIcons","Feed","props","posts","setPosts","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","onDislikePress","delete","styles","container","containerGallery","item","containerImage","user","name","image","uri","downloadURL","containerLike","currentUserLike","id","navigation","navigate","StyleSheet","create","flex","containerInfo","margin","aspectRatio","flexDirection","flexWrap","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport EvilIcons from 'react-native-vector-icons/EvilIcons'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded === props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n        console.log(posts)\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n                            <Text style={styles.container}>{item.user.name}</Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            <View style={styles.containerLike}>\n                            { item.currentUserLike ?\n                                (\n                                    <MaterialCommunityIcons name=\"heart\" color=\"red\" size={26} onPress={() => onDislikePress(item.user.uid, item.id)} />\n                                )\n                                :\n                                (\n                                    <MaterialCommunityIcons name=\"heart-outline\"  size={26} onPress={() => onLikePress(item.user.uid, item.id)} />\n                                )\n                            }\n                            <EvilIcons name=\"comment\" size = {36} onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}/>\n                            </View>\n                            <Text\n                                onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}>\n                                View Comments...\n                                </Text>\n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    },\n    containerLike:{\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}