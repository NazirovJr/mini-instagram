{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\projects\\\\React and JS\\\\instagram\\\\njr-instagram\\\\components\\\\auth\\\\LogIn.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"firebase\";\n\nvar LogIn = function (_Component) {\n  _inherits(LogIn, _Component);\n\n  var _super = _createSuper(LogIn);\n\n  function LogIn(props) {\n    var _this;\n\n    _classCallCheck(this, LogIn);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.onSingUp = _this.onSingIn.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LogIn, [{\n    key: \"onSingIn\",\n    value: function onSingIn() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (res) {\n        console.log(res);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"Sing In\",\n        onPress: function onPress() {\n          _this2.onSingIn();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return LogIn;\n}(Component);\n\nexport { LogIn as default };","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/components/auth/LogIn.js"],"names":["React","Component","firebase","LogIn","props","state","email","password","onSingUp","onSingIn","bind","auth","signInWithEmailAndPassword","then","res","console","log","catch","error","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,EADG;AAETC,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKC,QAAL,CAAcC,IAAd,+BAAhB;AANe;AAOlB;;;;+BAES;AAAA,wBACoB,KAAKL,KADzB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAENL,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,0BAAhB,CAA2CN,KAA3C,EAAiDC,QAAjD,EACKM,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAHL,EAIKG,KAJL,CAIW,UAAAC,KAAK,EAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OANL;AAOH;;;6BAEQ;AAAA;;AACL,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAE,OAAxB;AAAiC,QAAA,YAAY,EAAI,sBAACZ,KAAD,EAAS;AAAC,UAAA,MAAI,CAACa,QAAL,CAAc;AAACb,YAAAA,KAAK,EAALA;AAAD,WAAd;AAAuB,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAE,UAAxB;AAAoC,QAAA,eAAe,EAAE,IAArD;AAA2D,QAAA,YAAY,EAAI,sBAACC,QAAD,EAAY;AAAC,UAAA,MAAI,CAACY,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAARA;AAAD,WAAd;AAA0B,SAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,EAGH,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,SAAf;AAA0B,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,MAAI,CAACE,QAAL;AAAgB,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHG,CAAP;AAKH;;;;EA3B8BR,S;;SAAdE,K","sourcesContent":["import React, {Component} from 'react'\r\nimport {Button, TextInput, View} from \"react-native-web\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class LogIn extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n        this.onSingUp = this.onSingIn.bind(this)\r\n    }\r\n\r\n    onSingIn(){\r\n        const {email, password} = this.state\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <View>\r\n            <TextInput placeholder={\"email\"} onChangeText = {(email)=>{this.setState({email})}}/>\r\n            <TextInput placeholder={\"password\"} secureTextEntry={true} onChangeText = {(password)=>{this.setState({password})}}/>\r\n            <Button title={\"Sing In\"} onPress={()=>{this.onSingIn()}}/>\r\n        </View>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}