{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\projects\\\\React and JS\\\\instagram\\\\njr-instagram\\\\frontend\\\\components\\\\Instagram.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Instagram = function (_Component) {\n  _inherits(Instagram, _Component);\n\n  var _super = _createSuper(Instagram);\n\n  function Instagram() {\n    _classCallCheck(this, Instagram);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Instagram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        activeColor: \"#000\",\n        inactiveColor: \"#f0edf6\",\n        barStyle: {\n          backgroundColor: '#f0edf6'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              style: {\n                borderColor: \"#000\"\n              },\n              name: \"home\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              style: {\n                borderColor: \"#000\"\n              },\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              style: {\n                borderColor: \"#000\"\n              },\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              style: {\n                borderColor: \"#000\",\n                borderWidth: '22px'\n              },\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Instagram;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Instagram);","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/frontend/components/Instagram.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","ProfileScreen","SearchScreen","Tab","EmptyScreen","Instagram","props","backgroundColor","tabBarIcon","color","size","borderColor","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","borderWidth","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index'\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\nimport SearchScreen from './main/Search'\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return (null)\n}\n\nexport class Instagram extends Component {\n    componentDidMount() {\n        this.props.clearData();\n        this.props.fetchUser();\n        this.props.fetchUserPosts();\n        this.props.fetchUserFollowing();\n    }\n    render() {\n        return (\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}\n                           activeColor=\"#000\" inactiveColor=\"#f0edf6\"\n                           barStyle={{ backgroundColor: '#f0edf6' }} >\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons style={{borderColor:\"#000\"}} name=\"home\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons style={{borderColor:\"#000\"}} name=\"magnify\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Add\")\n                        }\n                    })}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons style={{borderColor:\"#000\"}} name=\"plus-box\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                listeners={({ navigation }) => ({\n                    tabPress: event => {\n                        event.preventDefault();\n                        navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                    }})}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons style={{borderColor:\"#000\",borderWidth:'22px'}} name=\"account-circle\" color={color} size={26} />\n                        ),\n                    }} />\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, fetchUserPosts, fetchUserFollowing, clearData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Instagram);\n"]},"metadata":{},"sourceType":"module"}