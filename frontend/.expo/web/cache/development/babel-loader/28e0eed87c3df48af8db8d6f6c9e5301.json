{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport applyLayout from \"../../modules/applyLayout\";\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport { bool } from 'prop-types';\nimport { Component } from 'react';\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from \"../StyleSheet\";\nimport TextPropTypes from \"./TextPropTypes\";\n\nvar Text = function (_Component) {\n  _inherits(Text, _Component);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Text, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        isInAParentText: true\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dir = _this$props.dir,\n          numberOfLines = _this$props.numberOfLines,\n          onPress = _this$props.onPress,\n          selectable = _this$props.selectable,\n          style = _this$props.style,\n          adjustsFontSizeToFit = _this$props.adjustsFontSizeToFit,\n          allowFontScaling = _this$props.allowFontScaling,\n          ellipsizeMode = _this$props.ellipsizeMode,\n          lineBreakMode = _this$props.lineBreakMode,\n          maxFontSizeMultiplier = _this$props.maxFontSizeMultiplier,\n          minimumFontScale = _this$props.minimumFontScale,\n          onLayout = _this$props.onLayout,\n          onLongPress = _this$props.onLongPress,\n          pressRetentionOffset = _this$props.pressRetentionOffset,\n          selectionColor = _this$props.selectionColor,\n          suppressHighlighting = _this$props.suppressHighlighting,\n          textBreakStrategy = _this$props.textBreakStrategy,\n          tvParallaxProperties = _this$props.tvParallaxProperties,\n          otherProps = _objectWithoutProperties(_this$props, [\"dir\", \"numberOfLines\", \"onPress\", \"selectable\", \"style\", \"adjustsFontSizeToFit\", \"allowFontScaling\", \"ellipsizeMode\", \"lineBreakMode\", \"maxFontSizeMultiplier\", \"minimumFontScale\", \"onLayout\", \"onLongPress\", \"pressRetentionOffset\", \"selectionColor\", \"suppressHighlighting\", \"textBreakStrategy\", \"tvParallaxProperties\"]);\n\n      var isInAParentText = this.context.isInAParentText;\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(this.props.className == null, 'Using the \"className\" prop on <Text> is deprecated.');\n      }\n\n      if (onPress) {\n        otherProps.accessible = true;\n        otherProps.onClick = this._createPressHandler(onPress);\n        otherProps.onKeyDown = this._createEnterHandler(onPress);\n      }\n\n      otherProps.classList = [this.props.className, classes.text, this.context.isInAParentText === true && classes.textHasAncestor, numberOfLines === 1 && classes.textOneLine, numberOfLines > 1 && classes.textMultiLine];\n      otherProps.dir = dir !== undefined ? dir : 'auto';\n      otherProps.style = [style, numberOfLines > 1 && {\n        WebkitLineClamp: numberOfLines\n      }, selectable === false && styles.notSelectable, onPress && styles.pressable];\n      var component = isInAParentText ? 'span' : 'div';\n      return createElement(component, otherProps);\n    }\n  }, {\n    key: \"_createEnterHandler\",\n    value: function _createEnterHandler(fn) {\n      return function (e) {\n        if (e.keyCode === 13) {\n          fn && fn(e);\n        }\n      };\n    }\n  }, {\n    key: \"_createPressHandler\",\n    value: function _createPressHandler(fn) {\n      return function (e) {\n        e.stopPropagation();\n        fn && fn(e);\n      };\n    }\n  }]);\n\n  return Text;\n}(Component);\n\nText.displayName = 'Text';\nText.propTypes = TextPropTypes;\nText.childContextTypes = {\n  isInAParentText: bool\n};\nText.contextTypes = {\n  isInAParentText: bool\n};\nvar classes = css.create({\n  text: {\n    border: '0 solid black',\n    boxSizing: 'border-box',\n    color: 'black',\n    display: 'inline',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word'\n  },\n  textHasAncestor: {\n    color: 'inherit',\n    font: 'inherit',\n    whiteSpace: 'inherit'\n  },\n  textOneLine: {\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  textMultiLine: {\n    display: '-webkit-box',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    WebkitBoxOrient: 'vertical'\n  }\n});\nvar styles = StyleSheet.create({\n  notSelectable: {\n    userSelect: 'none'\n  },\n  pressable: {\n    cursor: 'pointer'\n  }\n});\nexport default applyLayout(applyNativeMethods(Text));","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/node_modules/react-native-web/src/exports/Text/index.js"],"names":["applyLayout","applyNativeMethods","bool","Component","createElement","css","warning","StyleSheet","TextPropTypes","Text","isInAParentText","props","dir","numberOfLines","onPress","selectable","style","adjustsFontSizeToFit","allowFontScaling","ellipsizeMode","lineBreakMode","maxFontSizeMultiplier","minimumFontScale","onLayout","onLongPress","pressRetentionOffset","selectionColor","suppressHighlighting","textBreakStrategy","tvParallaxProperties","otherProps","context","process","env","NODE_ENV","className","accessible","onClick","_createPressHandler","onKeyDown","_createEnterHandler","classList","classes","text","textHasAncestor","textOneLine","textMultiLine","undefined","WebkitLineClamp","styles","notSelectable","pressable","component","fn","e","keyCode","stopPropagation","displayName","propTypes","childContextTypes","contextTypes","create","border","boxSizing","color","display","font","margin","padding","whiteSpace","wordWrap","maxWidth","overflow","textOverflow","WebkitBoxOrient","userSelect","cursor"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport applyLayout from '../../modules/applyLayout';\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport { bool } from 'prop-types';\nimport { Component } from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../StyleSheet';\nimport TextPropTypes from './TextPropTypes';\n\nclass Text extends Component<*> {\n  static displayName = 'Text';\n\n  static propTypes = TextPropTypes;\n\n  static childContextTypes = {\n    isInAParentText: bool\n  };\n\n  static contextTypes = {\n    isInAParentText: bool\n  };\n\n  getChildContext() {\n    return { isInAParentText: true };\n  }\n\n  render() {\n    const {\n      dir,\n      numberOfLines,\n      onPress,\n      selectable,\n      style,\n      /* eslint-disable */\n      adjustsFontSizeToFit,\n      allowFontScaling,\n      ellipsizeMode,\n      lineBreakMode,\n      maxFontSizeMultiplier,\n      minimumFontScale,\n      onLayout,\n      onLongPress,\n      pressRetentionOffset,\n      selectionColor,\n      suppressHighlighting,\n      textBreakStrategy,\n      tvParallaxProperties,\n      /* eslint-enable */\n      ...otherProps\n    } = this.props;\n\n    const { isInAParentText } = this.context;\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(this.props.className == null, 'Using the \"className\" prop on <Text> is deprecated.');\n    }\n\n    if (onPress) {\n      otherProps.accessible = true;\n      otherProps.onClick = this._createPressHandler(onPress);\n      otherProps.onKeyDown = this._createEnterHandler(onPress);\n    }\n\n    otherProps.classList = [\n      this.props.className,\n      classes.text,\n      this.context.isInAParentText === true && classes.textHasAncestor,\n      numberOfLines === 1 && classes.textOneLine,\n      numberOfLines > 1 && classes.textMultiLine\n    ];\n    // allow browsers to automatically infer the language writing direction\n    otherProps.dir = dir !== undefined ? dir : 'auto';\n    otherProps.style = [\n      style,\n      numberOfLines > 1 && { WebkitLineClamp: numberOfLines },\n      selectable === false && styles.notSelectable,\n      onPress && styles.pressable\n    ];\n\n    const component = isInAParentText ? 'span' : 'div';\n\n    return createElement(component, otherProps);\n  }\n\n  _createEnterHandler(fn) {\n    return e => {\n      if (e.keyCode === 13) {\n        fn && fn(e);\n      }\n    };\n  }\n\n  _createPressHandler(fn) {\n    return e => {\n      e.stopPropagation();\n      fn && fn(e);\n    };\n  }\n}\n\nconst classes = css.create({\n  text: {\n    border: '0 solid black',\n    boxSizing: 'border-box',\n    color: 'black',\n    display: 'inline',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    whiteSpace: 'pre-wrap',\n    wordWrap: 'break-word'\n  },\n  textHasAncestor: {\n    color: 'inherit',\n    font: 'inherit',\n    whiteSpace: 'inherit'\n  },\n  textOneLine: {\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  // See #13\n  textMultiLine: {\n    display: '-webkit-box',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    WebkitBoxOrient: 'vertical'\n  }\n});\n\nconst styles = StyleSheet.create({\n  notSelectable: {\n    userSelect: 'none'\n  },\n  pressable: {\n    cursor: 'pointer'\n  }\n});\n\nexport default applyLayout(applyNativeMethods(Text));\n"]},"metadata":{},"sourceType":"module"}