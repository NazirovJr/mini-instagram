{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CLEAR_DATA, USERS_DATA_STATE_CHANGE, USERS_LIKE_STATE_CHANGE, USERS_POST_STATE_CHANGE } from \"../const\";\nvar InitializeState = {\n  users: [],\n  feed: [],\n  userFollowingLoaded: 0\n};\nexport var users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitializeState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USERS_DATA_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [].concat(_toConsumableArray(state.users), [action.user])\n      });\n\n    case USERS_POST_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userLoaded: state.userFollowingLoaded + 1,\n        feed: [].concat(_toConsumableArray(state.feed), _toConsumableArray(action.posts))\n      });\n\n    case USERS_LIKE_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        feed: state.feed.map(function (post) {\n          return post.uid === action.postId ? _objectSpread(_objectSpread({}, post), {}, {\n            currentUserLike: action.currentUserLike\n          }) : post;\n        })\n      });\n\n    case CLEAR_DATA:\n      {\n        return InitializeState;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/Redux/reducers/users.js"],"names":["CLEAR_DATA","USERS_DATA_STATE_CHANGE","USERS_LIKE_STATE_CHANGE","USERS_POST_STATE_CHANGE","InitializeState","users","feed","userFollowingLoaded","state","action","type","user","userLoaded","posts","map","post","uid","postId","currentUserLike"],"mappings":";;;;;;;AAAA,SACIA,UADJ,EAEIC,uBAFJ,EAE6BC,uBAF7B,EAGIC,uBAHJ;AAMA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,IAAI,EAAC,EAFe;AAGpBC,EAAAA,mBAAmB,EAAE;AAHD,CAAxB;AAOA,OAAO,IAAMF,KAAK,GAAG,SAARA,KAAQ,GAAqC;AAAA,MAApCG,KAAoC,uEAA5BJ,eAA4B;AAAA,MAAXK,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,uBAAL;AACI,6CACOO,KADP;AAEIH,QAAAA,KAAK,+BAAMG,KAAK,CAACH,KAAZ,IAAmBI,MAAM,CAACE,IAA1B;AAFT;;AAIJ,SAAKR,uBAAL;AACI,6CACOK,KADP;AAEII,QAAAA,UAAU,EAAEJ,KAAK,CAACD,mBAAN,GAA4B,CAF5C;AAGID,QAAAA,IAAI,+BAAME,KAAK,CAACF,IAAZ,sBAAqBG,MAAM,CAACI,KAA5B;AAHR;;AAKJ,SAAKX,uBAAL;AACI,6CACOM,KADP;AAEIF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWQ,GAAX,CAAe,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACQ,MAApB,mCACtBF,IADsB;AAEzBG,YAAAA,eAAe,EAACT,MAAM,CAACS;AAFE,eAG3BH,IAHuB;AAAA,SAAnB;AAFV;;AAOJ,SAAKf,UAAL;AACA;AACI,eAAOI,eAAP;AACH;;AACD;AACI,aAAOI,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import {\r\n    CLEAR_DATA,\r\n    USERS_DATA_STATE_CHANGE, USERS_LIKE_STATE_CHANGE,\r\n    USERS_POST_STATE_CHANGE\r\n} from \"../const\";\r\n\r\nconst InitializeState = {\r\n    users: [],\r\n    feed:[],\r\n    userFollowingLoaded: 0\r\n}\r\n\r\n\r\nexport const users = (state = InitializeState, action) => {\r\n    switch (action.type) {\r\n        case USERS_DATA_STATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user]\r\n            }\r\n        case USERS_POST_STATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                userLoaded: state.userFollowingLoaded + 1,\r\n                feed: [...state.feed, ...action.posts]\r\n            }\r\n        case USERS_LIKE_STATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                feed: state.feed.map(post => post.uid === action.postId ? {\r\n                    ...post,\r\n                    currentUserLike:action.currentUserLike\r\n                }:post)\r\n            }\r\n        case CLEAR_DATA:\r\n        {\r\n            return InitializeState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}