{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\projects\\\\React and JS\\\\instagram\\\\njr-instagram\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport * as firebase from \"firebase\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Redux/reducers\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAubE6EFsXyQ_zSplh-AlI5BQNN-xLiK_E\",\n  authDomain: \"instagram-fd6fb.firebaseapp.com\",\n  projectId: \"instagram-fd6fb\",\n  storageBucket: \"instagram-fd6fb.appspot.com\",\n  messagingSenderId: \"662090284621\",\n  appId: \"1:662090284621:web:f89f172c809ee4d36b6604\",\n  measurementId: \"G-589K4GQ006\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport LandingScreen from \"./components/auth/LandingAuthor\";\nimport RegistrationScreen from \"./components/auth/Registration\";\nimport LogInScreen from \"./components/auth/LogIn\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/src/exports/Text\";\nimport MainScreen from \"./components/Main\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false,\n      loggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loaded: true,\n            loggedIn: false\n          });\n        } else {\n          _this2.setState({\n            loaded: true,\n            loggedIn: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loaded = _this$state.loaded,\n          loggedIn = _this$state.loggedIn;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegistrationScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LogInScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/App.js"],"names":["React","Component","StatusBar","NavigationContainer","firebase","Provider","createStore","applyMiddleware","thunk","rootReducer","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","createStackNavigator","LandingScreen","RegistrationScreen","LogInScreen","View","Text","MainScreen","Stack","App","props","state","loaded","loggedIn","auth","onAuthStateChanged","user","setState","flex","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport {NavigationContainer} from \"@react-navigation/native\";\n\nimport * as firebase from \"firebase\"\n\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './Redux/reducers'\n\nconst store = createStore(rootReducer,applyMiddleware(thunk))\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAubE6EFsXyQ_zSplh-AlI5BQNN-xLiK_E\",\n    authDomain: \"instagram-fd6fb.firebaseapp.com\",\n    projectId: \"instagram-fd6fb\",\n    storageBucket: \"instagram-fd6fb.appspot.com\",\n    messagingSenderId: \"662090284621\",\n    appId: \"1:662090284621:web:f89f172c809ee4d36b6604\",\n    measurementId: \"G-589K4GQ006\"\n};\n\nif (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig)\n}\n\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport LandingScreen from \"./components/auth/LandingAuthor\";\nimport RegistrationScreen from \"./components/auth/Registration\";\nimport LogInScreen from \"./components/auth/LogIn\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/src/exports/Text\";\nimport MainScreen from \"./components/Main\";\n\nconst Stack = createStackNavigator();\nexport default class  App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded:false,\n            loggedIn:false\n        }\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (!user){\n                this.setState({\n                    loaded:true,\n                    loggedIn:false\n                })\n            } else {\n                this.setState({\n                    loaded:true,\n                    loggedIn:true\n                })\n            }\n        })\n    }\n\n    render() {\n        const {loaded, loggedIn} = this.state\n        if (!loaded){\n            return  <View style={{flex:1,justifyContent:'center'}}>\n                <Text>\n                    Loading\n                </Text>\n            </View>\n        }\n\n        if (!loggedIn){\n            return (\n                <NavigationContainer>\n                    <Stack.Navigator initialRouteName={\"Landing\"}>\n                        <Stack.Screen name={\"Landing\"} component={LandingScreen} options={{headerShown:false}} />\n                        <Stack.Screen name={\"Register\"} component={RegistrationScreen}/>\n                        <Stack.Screen name={\"Login\"} component={LogInScreen}/>\n                    </Stack.Navigator>\n                </NavigationContainer>\n            );\n        }\n\n        return <Provider store={store}>\n            <Stack.Navigator initialRouteName={\"Main\"}>\n                <Stack.Screen name={\"Main\"} component={MainScreen} options={{headerShown:false}} />\n            </Stack.Navigator>\n        </Provider>\n\n\n\n    }\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}