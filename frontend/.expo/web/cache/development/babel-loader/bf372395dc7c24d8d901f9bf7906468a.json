{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\projects\\\\React and JS\\\\instagram\\\\njr-instagram\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../Redux/action\";\nimport { connect } from 'react-redux';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport FeedScreen from \"./main/Feed\";\nimport AddScreen from \"./main/Add\";\nimport ProfileScreen from \"./main/Profile\";\nimport MaterialCommunityIcon from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar Tab = createBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        InitializeRouteName: \"Feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcon, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcon, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcon, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["D:/projects/React and JS/instagram/njr-instagram/components/Main.js"],"names":["React","Component","bindActionCreators","fetchUser","connect","createBottomTabNavigator","FeedScreen","AddScreen","ProfileScreen","MaterialCommunityIcon","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {View, Text} from 'react-native'\r\nimport {bindActionCreators} from \"redux\";\r\nimport {fetchUser} from \"../Redux/action\";\r\nimport {connect} from 'react-redux'\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport FeedScreen from './main/Feed'\r\nimport AddScreen from './main/Add'\r\nimport ProfileScreen from './main/Profile'\r\nimport MaterialCommunityIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nconst Tab = createBottomTabNavigator()\r\n\r\nconst EmptyScreen = () => {\r\n    return (null)\r\n}\r\nexport class Main extends Component {\r\n    componentDidMount() {\r\n            this.props.fetchUser();\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab.Navigator InitializeRouteName=\"Feed\">\r\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\r\n                options={{\r\n                    tabBarIcon:({color, size}) => (\r\n                        <MaterialCommunityIcon name=\"home\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\r\n                            listeners={({navigation}) => ({\r\n                                tabPress :event => {\r\n                                    event.preventDefault()\r\n                                    navigation.navigate(\"Add\")\r\n                                }\r\n                            })}\r\n                            options={{\r\n                                tabBarIcon:({color, size}) => (\r\n                                    <MaterialCommunityIcon name=\"plus-box\" color={color} size={26}/>\r\n                                ),\r\n                            }}/>\r\n                <Tab.Screen name=\"Profile\" component={ProfileScreen}\r\n                            options={{\r\n                                tabBarIcon:({color, size}) => (\r\n                                    <MaterialCommunityIcon name=\"account-circle\" color={color} size={26}/>\r\n                                ),\r\n                            }}/>\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser},dispatch)\r\nexport default connect(mapStateToProps,mapDispatchProps)(Main)"]},"metadata":{},"sourceType":"module"}